{"version":3,"sources":["logo.svg","../../shared/login.js","App.js","index.js"],"names":["module","exports","setToken","token","length","window","localStorage","setItem","removeItem","storageKey","clearToken","getToken","getItem","App","Component","state","response","componentWillMount","fetch","headers","Authorization","then","json","myJson","this","setState","catch","err","message","render","className","src","logo","alt","href","JSON","stringify","ReactDOM","document","getElementById"],"mappings":"oFAAAA,EAAOC,QAAU,IAA0B,kC,cCU3C,SAASC,EAASC,GACZA,GAASA,EAAMC,OAAS,EAC1BC,OAAOC,aAAaC,QAJL,UAIyBJ,GAExCE,OAAOC,aAAaE,WANL,WAkBnBR,EAAOC,QAAU,CACfQ,WAnBiB,UAoBjBP,SAAUA,EACVQ,WAXF,WACER,EAAS,OAWTS,SARF,WACE,OAAON,OAAOC,aAAaM,QAfV,c,wLCFnB,MAAMC,UAAYC,YAAW,eAAD,oBAC1BC,MAAQ,CACNC,SAAU,MAGZC,qBACEC,MAAM,oBAAqB,CACzBC,QAAS,CACPC,cAAc,UAAD,OAAYT,yBAG1BU,KAAKL,GAAYA,EAASM,QAC1BD,KAAKE,IACJC,KAAKC,SAAS,CAAET,SAAUO,MAE3BG,MAAMC,IACLH,KAAKC,SAAS,CAAET,SAAUW,EAAIC,YAIpCC,SAAU,MACAb,EAAaQ,KAAKT,MAAlBC,SACR,OACE,yBAAKc,UAAU,OACb,4BAAQA,UAAU,cAChB,yBAAKC,IAAKC,IAAMF,UAAU,WAAWG,IAAI,SACzC,wBAAIH,UAAU,aAAd,qBAEF,uBAAGA,UAAU,aAAb,aAEE,4BACE,4BACE,uBAAGI,KAAM,uBAAT,WAEF,4BACE,uBAAGA,KAAM,uBAAT,aAIN,6CACClB,EACC,yBAAKc,UAAU,QAAQK,KAAKC,UAAUpB,IAEtC,oBAOKH,QCnDfwB,IAASR,OAAO,kBAAC,EAAD,MAASS,SAASC,eAAe,W","file":"static/js/main.b9e09886.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","/*\n  1) In docker swarm the src folder of client-auth is missing - can't find why - and this file is required by server app\n  2) CRA does not handle symlinks well (see https://github.com/moxystudio/react-with-moxy/issues/111) so contents of this\n  file have to be in ES5 (http://bit.ly/2tRViJ9)\n */\n/* global window */\n/* eslint-disable object-shorthand */\n\nconst storageKey = \"__token\";\n\nfunction setToken(token) {\n  if (token && token.length > 0) {\n    window.localStorage.setItem(storageKey, token);\n  } else {\n    window.localStorage.removeItem(storageKey);\n  }\n}\n\nfunction clearToken() {\n  setToken(null);\n}\n\nfunction getToken() {\n  return window.localStorage.getItem(storageKey);\n}\n\nmodule.exports = {\n  storageKey: storageKey,\n  setToken: setToken,\n  clearToken: clearToken,\n  getToken: getToken,\n};\n","import React, { Component } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\n\nimport { getToken } from \"./shared/login\";\n\nclass App extends Component {\n  state = {\n    response: null\n  };\n\n  componentWillMount() {\n    fetch(\"/api/v1/auth/test\", {\n      headers: {\n        Authorization: `Bearer ${getToken()}`\n      }\n    })\n      .then(response => response.json())\n      .then(myJson => {\n        this.setState({ response: myJson });\n      })\n      .catch(err => {\n        this.setState({ response: err.message });\n      });\n  }\n\n  render() {\n    const { response } = this.state;\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <h1 className=\"App-title\">Welcome to React</h1>\n        </header>\n        <p className=\"App-intro\">\n          Login via:\n          <ul>\n            <li>\n              <a href={\"/api/v1/auth/google\"}>Google</a>\n            </li>\n            <li>\n              <a href={\"/api/v1/auth/github\"}>Github</a>\n            </li>\n          </ul>\n        </p>\n        <h3>Test API call</h3>\n        {response ? (\n          <div className=\"test\">{JSON.stringify(response)}</div>\n        ) : (\n          \"... loading ...\"\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}